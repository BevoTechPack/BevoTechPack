# Configuration file

experimental {
    # If true, barrels will expose their full contents through the standard MC inventory interfaces. This will allow mods that do not support the DSU to see the full contents of the barrel. *** WARNING *** This will allow mods that do not properly handle inventories to empty out a barrel in one go. Use at your own risk. If you do find such a game breaking mod, please report to that mods' author and ask them to handle inventories better. Otherwise, please enjoy this experimental feature ^_^ [default: false]
    B:exposeFullStorageSize=false
}


general {
    # If true, barrels can be initially placed and dollyed so that their front side can be on the top or bottom. The front side is the side with the initial sticker applied. [default: true]
    B:allowVerticalPlacement=true

    # This list contains paired numbers: first is the tier level this color applies to, second is the color. The color value is the RGB color as a single int
    I:colorOverrides <
        0
        0
     >
    B:diamondDollyActive=true

    # A structural tier will be created for each material in this list, even if not craftable
    S:materialList <
        Ore.plankWood
        Ore.ingotIron
        Ore.ingotGold
        Ore.gemDiamond
        Ore.obsidian
        Ore.whiteStone
        Ore.gemEmerald
     >

    # Maximum tier to generate crafting recipes for
    I:maxCraftableTier=7

    # Controls the minimum delay (in ms) between two server/client sync. Lower values mean closer to realtime, and more network usage.
    I:packetLimiterDelay=500

    # If true, punching a barrel will remove one item and shift punching a stack. [default: false]
    B:reverseBehaviourClickLeft=false

    # How many stacks the base barrel and each upgrade will provide
    I:stacksSize=64

    # The name of the item to use for the strutural tier upgrade recipes. Default is "minecraft:fence" for Vanilla Fence. The format is Ore.name for an ore dictionary lookup, or itemDomain:itemname[:meta] for a direct item, not this is case-sensitive.
    S:tierUpgradeItem=minecraft:fence

    # This is used when testing a players aim for block placement.  If the aim value is greater than or equal to this setting, it is determined you are attempting to place a block facing down.  The reverse is true for placing blocks facing up. 0 = dead ahead, 1 = directly above. [range: 0.0 ~ 1.0, default: 0.79]
    S:verticalPlacementRange=0.79
}


